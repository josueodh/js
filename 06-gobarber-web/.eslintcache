[{"/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/index.tsx":"1","/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/routes/Route.tsx":"2","/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/hooks/toast.tsx":"3","/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/components/Tooltip/styles.ts":"4","/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/routes/index.tsx":"5","/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/pages/ForgotPassword/index.tsx":"6","/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/components/Button/index.tsx":"7","/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/components/ToastContainer/Toast/index.tsx":"8","/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/components/ToastContainer/Toast/styles.ts":"9","/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/pages/ResetPassword/styles.ts":"10","/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/pages/ResetPassword/index.tsx":"11","/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/pages/Dashboard/index.tsx":"12","/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/pages/Dashboard/styles.ts":"13","/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/hooks/auth.tsx":"14","/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/pages/ForgotPassword/styles.ts":"15","/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/App.tsx":"16","/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/services/api.ts":"17","/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/components/ToastContainer/styles.ts":"18","/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/pages/Profile/index.tsx":"19","/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/pages/Profile/styles.ts":"20","/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/components/Input/index.tsx":"21"},{"size":410,"mtime":1612670314955,"results":"22","hashOfConfig":"23"},{"size":802,"mtime":1612670314955,"results":"24","hashOfConfig":"25"},{"size":1450,"mtime":1612670314955,"results":"26","hashOfConfig":"23"},{"size":740,"mtime":1612670314955,"results":"27","hashOfConfig":"25"},{"size":800,"mtime":1613583685085,"results":"28","hashOfConfig":"25"},{"size":2751,"mtime":1613418066171,"results":"29","hashOfConfig":"25"},{"size":378,"mtime":1613418026763,"results":"30","hashOfConfig":"23"},{"size":1187,"mtime":1613418182356,"results":"31","hashOfConfig":"25"},{"size":1181,"mtime":1613418168048,"results":"32","hashOfConfig":"23"},{"size":1498,"mtime":1613418343221,"results":"33","hashOfConfig":"23"},{"size":2903,"mtime":1613419374966,"results":"34","hashOfConfig":"25"},{"size":7368,"mtime":1613583560624,"results":"35","hashOfConfig":"25"},{"size":5285,"mtime":1613583611896,"results":"36","hashOfConfig":"25"},{"size":2145,"mtime":1613586443545,"results":"37","hashOfConfig":"25"},{"size":1498,"mtime":1613417113772,"results":"38","hashOfConfig":"23"},{"size":348,"mtime":1612670314951,"results":"39","hashOfConfig":"25"},{"size":116,"mtime":1612670314955,"results":"40","hashOfConfig":"25"},{"size":171,"mtime":1612670314955,"results":"41","hashOfConfig":"25"},{"size":4030,"mtime":1613586934662,"results":"42","hashOfConfig":"25"},{"size":1667,"mtime":1613586947310,"results":"43","hashOfConfig":"25"},{"size":1669,"mtime":1613584283783,"results":"44","hashOfConfig":"25"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19tlmv4",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"camu1",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/index.tsx",[],"/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/routes/Route.tsx",[],"/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/hooks/toast.tsx",[],"/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/components/Tooltip/styles.ts",[],"/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/routes/index.tsx",[],"/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/pages/ForgotPassword/index.tsx",["89"],"/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/components/Button/index.tsx",[],"/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/components/ToastContainer/Toast/index.tsx",[],"/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/components/ToastContainer/Toast/styles.ts",[],"/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/pages/ResetPassword/styles.ts",[],"/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/pages/ResetPassword/index.tsx",[],"/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/pages/Dashboard/index.tsx",["90"],"import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { isToday, format, parseISO, isAfter } from \"date-fns\";\nimport ptBR from \"date-fns/locale/pt-BR\";\nimport DayPicker, { DayModifiers } from \"react-day-picker\";\nimport { FiClock, FiPower } from \"react-icons/fi\";\nimport \"react-day-picker/lib/style.css\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Header,\n  HeaderContent,\n  Profile,\n  Content,\n  Schedule,\n  NextAppointment,\n  Section,\n  Appointment,\n  Calendar,\n} from \"./styles\";\n\nimport logoImg from \"../../assets/logo.svg\";\nimport { useAuth } from \"../../hooks/auth\";\nimport api from \"../../services/api\";\n\ninterface MonthAvailabilityItem {\n  day: number;\n  available: boolean;\n}\n\ninterface Appointment {\n  id: string;\n  date: string;\n  hourFormatted: string;\n  user: {\n    name: string;\n    avatar_url: string;\n  };\n}\nconst Dashboard: React.FC = () => {\n  const { signOut, user } = useAuth();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const [monthAvailability, setMonthAvailability] = useState<\n    MonthAvailabilityItem[]\n  >([]);\n  const [appointments, setAppointments] = useState<Appointment[]>([]);\n  const handleDateChange = useCallback((day: Date, modifiers: DayModifiers) => {\n    if (modifiers.available && !modifiers.disabled) {\n      setSelectedDate(day);\n    }\n  }, []);\n\n  const handleMonthChange = useCallback((month: Date) => {\n    setCurrentMonth(month);\n  }, []);\n\n  useEffect(() => {\n    api\n      .get(`/providers/${user.id}/month-availability`, {\n        params: {\n          year: currentMonth.getFullYear(),\n          month: currentMonth.getMonth() + 1,\n        },\n      })\n      .then((response) => setMonthAvailability(response.data));\n  }, [currentMonth, user.id]);\n\n  useEffect(() => {\n    api\n      .get<Appointment[]>(`appointments/me`, {\n        params: {\n          year: selectedDate.getFullYear(),\n          month: selectedDate.getMonth() + 1,\n          day: selectedDate.getDate(),\n        },\n      })\n      .then((response) => {\n        const appointmentsFormatted = response.data.map((appointment) => {\n          return {\n            ...appointment,\n            hourFormatted: format(parseISO(appointment.date), \"HH:mm\"),\n          };\n        });\n        setAppointments(appointmentsFormatted);\n      });\n  }, [selectedDate, user.id]);\n  const disabledDays = useMemo(() => {\n    const dates = monthAvailability\n      .filter((monthDay) => monthDay.available === false)\n      .map((monthDay) => {\n        const year = currentMonth.getFullYear();\n        const month = currentMonth.getMonth();\n        return new Date(year, month, monthDay.day);\n      });\n    return dates;\n  }, [currentMonth, monthAvailability]);\n\n  const selectedDateAsText = useMemo(() => {\n    return format(selectedDate, \"'Dia' dd 'de' MMMM\", {\n      locale: ptBR,\n    });\n  }, [selectedDate]);\n\n  const selectedWeekDay = useMemo(() => {\n    return format(selectedDate, \"cccc\", {\n      locale: ptBR,\n    });\n  }, [selectedDate]);\n\n  const morningAppointments = useMemo(() => {\n    return appointments.filter((appointment) => {\n      return parseISO(appointment.date).getHours() < 12;\n    });\n  }, [appointments]);\n  const afternoonAppointments = useMemo(() => {\n    return appointments.filter((appointment) => {\n      return parseISO(appointment.date).getHours() >= 12;\n    });\n  }, [appointments]);\n\n  const nextAppointment = useMemo(() => {\n    return appointments.find((appointment) =>\n      isAfter(parseISO(appointment.date), new Date())\n    );\n  }, [appointments]);\n  return (\n    <Container>\n      <Header>\n        <HeaderContent>\n          <img src={logoImg} alt=\"GoBarber\" />\n          <Profile>\n            <img\n              src=\"https://avatars.githubusercontent.com/u/43760220?s=460&u=30128cecfc2638fd1ecf5b1f4a9329a8b09948a0&v=4\"\n              alt=\"GoBarber\"\n            />\n            <div>\n              <span>Bem-vindo,</span>\n              <Link to=\"/profile\">\n                <strong>{user.name}</strong>\n              </Link>\n            </div>\n          </Profile>\n          <button type=\"button\" onClick={signOut}>\n            <FiPower />\n          </button>\n        </HeaderContent>\n      </Header>\n      <Content>\n        <Schedule>\n          <h1>Horários agendados</h1>\n          <p>\n            {isToday(selectedDate) && <span>Hoje</span>}\n            <span>{selectedDateAsText}</span>\n            <span>{selectedWeekDay}</span>\n          </p>\n          {isToday(selectedDate) && nextAppointment && (\n            <NextAppointment>\n              <strong>Agendamento a seguir</strong>\n              <div>\n                <img\n                  src={nextAppointment.user.avatar_url}\n                  alt={nextAppointment.user.name}\n                />\n                <strong>{nextAppointment.user.name}</strong>\n                <span>\n                  <FiClock />\n                  {nextAppointment.hourFormatted}\n                </span>\n              </div>\n            </NextAppointment>\n          )}\n          <Section>\n            <strong>Manhã</strong>\n            {morningAppointments.length === 0 && (\n              <p>Nenhum agendamento neste período</p>\n            )}\n            {morningAppointments.map((appointment) => (\n              <Appointment key={appointment.id}>\n                <span>\n                  <FiClock /> {appointment.hourFormatted}\n                </span>\n                <div>\n                  <img\n                    src={appointment.user.avatar_url}\n                    alt={appointment.user.name}\n                  />\n                  <strong>{appointment.user.name}</strong>\n                </div>\n              </Appointment>\n            ))}\n          </Section>\n          <Section>\n            <strong>Tarde</strong>\n            {afternoonAppointments.length === 0 && (\n              <p>Nenhum agendamento neste período</p>\n            )}\n            {afternoonAppointments.map((appointment) => (\n              <Appointment key={appointment.id}>\n                <span>\n                  <FiClock /> {appointment.hourFormatted}\n                </span>\n                <div>\n                  <img\n                    src={appointment.user.avatar_url}\n                    alt={appointment.user.name}\n                  />\n                  <strong>{appointment.user.name}</strong>\n                </div>\n              </Appointment>\n            ))}\n          </Section>\n        </Schedule>\n        <Calendar>\n          <DayPicker\n            fromMonth={new Date()}\n            weekdaysShort={[\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"]}\n            disabledDays={[{ daysOfWeek: [0, 6] }, ...disabledDays]}\n            modifiers={{\n              available: { daysOfWeek: [1, 2, 3, 4, 5] },\n            }}\n            onMonthChange={handleMonthChange}\n            selectedDays={selectedDate}\n            onDayClick={handleDateChange}\n            months={[\n              \"Janeiro\",\n              \"Fevereiro\",\n              \"Março\",\n              \"Abril\",\n              \"Maio\",\n              \"Junho\",\n              \"Julho\",\n              \"Agosto\",\n              \"Setembro\",\n              \"Outubro\",\n              \"Novembro\",\n              \"Dezembro\",\n            ]}\n          />\n        </Calendar>\n      </Content>\n    </Container>\n  );\n};\nexport default Dashboard;\n","/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/pages/Dashboard/styles.ts",[],"/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/hooks/auth.tsx",[],"/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/pages/ForgotPassword/styles.ts",[],"/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/App.tsx",[],["91","92","93","94","95"],"/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/services/api.ts",[],"/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/components/ToastContainer/styles.ts",["96"],"/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/pages/Profile/index.tsx",[],"/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/pages/Profile/styles.ts",[],"/home/josue/Desktop/projects/rocketseat/aulas/06-gobarber-web/src/components/Input/index.tsx",[],{"ruleId":"97","severity":1,"message":"98","line":70,"column":5,"nodeType":"99","endLine":70,"endColumn":24,"suggestions":"100"},{"ruleId":"101","severity":2,"message":"102","line":138,"column":15,"nodeType":"103","endLine":138,"endColumn":21},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":1,"column":18,"nodeType":"116","messageId":"117","endLine":1,"endColumn":21},"react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'history'. Either exclude it or remove the dependency array.","ArrayExpression",["118"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","lines-around-directive",["119"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'css' is defined but never used.","Identifier","unusedVar",{"desc":"120","fix":"121"},"padding-line-between-statements","Update the dependencies array to be: [addToast]",{"range":"122","text":"123"},[2093,2112],"[addToast]"]